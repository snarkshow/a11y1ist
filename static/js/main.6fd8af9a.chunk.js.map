{"version":3,"sources":["h1logo.svg","firebase.js","Header.js","Button.js","List.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","react_default","a","createElement","src","h1logo","alt","aria-label","class","className","href","Button","_this","this","props","ingredients","map","ingredient","index","tabIndex","key","onClick","handleClick","Component","List","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","removeItem","item","database","ref","child","remove","scrollMore","scroll","state","userList","_this2","listItem","name","aria-hidden","_this3","on","response","newState","listObject","val","property","push","setState","App","event","buttonValue","target","textContent","vegetables","fruit","protein","myButtonRef","React","createRef","id","src_Header","modules","to","duration","smooth","onSubmit","keyPress","src_Button","tabindex","src_List","data","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fd8af9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/h1logo.f76a17f7.svg\";","// firebase.js\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAoxQiDR6mnqrkYtJpuDZgFawRJfLMOPog\",\n    authDomain: \"project5-8841f.firebaseapp.com\",\n    databaseURL: \"https://project5-8841f.firebaseio.com\",\n    projectId: \"project5-8841f\",\n    storageBucket: \"project5-8841f.appspot.com\",\n    messagingSenderId: \"110740442639\",\n    appId: \"1:110740442639:web:d093ee011320d9b7\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from 'react';\nimport h1logo from './h1logo.svg';\n\n\nconst Header = () => {\n    return (\n            <header>\n                <h1>\n                    <img src={h1logo} alt=\"ally list logo\" aria-label=\"ally list logo\"/>\n                </h1>\n                <div class=\"headerWrapper\">\n                    <div className=\"skipLinks\">\n                        <a href=\"#appScreen\" className=\"getList\">Add items to list</a>\n                    <a href=\"#listScreen\" className=\"getList\">Go to current list</a>\n                    </div>\n                    <div className=\"headerIntro\">\n                        <p>AllyList is an accessible grocery list builder.\n                        Hit \"tab\" to navigate, and use \"enter\" to select or remove items.</p>\n                    </div>\n                </div>\n            </header>\n            \n\n    )\n} \n\nexport default Header;","import React, { Component } from 'react';\n\nclass Button extends Component {\n\n\n    render() {\n        return (\n            <div className=\"list\">\n                {this.props.ingredients.map((ingredient, index) => {\n                    return <button tabIndex={0} className=\"groceryButton\" key={index} alt={ingredient} onClick={this.props.handleClick}>{ingredient}</button>\n                })}\n\n            </div>\n        );\n    }\n}\nexport default Button;","import React, { Component} from 'react';\nimport firebase from './firebase';\nimport { animateScroll as scroll } from \"react-scroll\";\n\nclass List extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userList: [],\n        }\n    }\n\n    \n    removeItem = (item) => {\n        const dbRef = firebase.database().ref(`savedItems`);\n        dbRef.child(item).remove();\n    }\n\n    scrollMore = () => {\n    scroll.scrollMore(150);\n    }\n\n    render() {\n        return (\n            <div>\n                <ul className=\"groceryList\">\n                    {this.state.userList.map((listItem) => {\n                        \n                        return <li key={listItem.key} tabIndex={0}>  {listItem.name} \n                                    <button\n                                        className=\"removeItem\"\n                                        aria-label=\"click to remove item\"\n                                        tabIndex={0}\n                                        onClick={() => this.removeItem(listItem.key)}>\n                                        <span aria-hidden=\"true\">\n                                            <i class=\"fas fa-times\"></i>\n                                        </span>\n                                    </button>\n                                </li>\n                    })}\n                </ul>\n            </div>\n        );\n    }\n    componentDidMount(){\n        const dbRef = firebase.database().ref(\"savedItems\");\n        dbRef.on('value', (response) => {\n            const newState = [];\n            const listObject = (response.val());\n            for (let property in listObject) {\n                newState.push({key:property, name:listObject[property]});\n            }\n            this.setState({\n                userList: newState,\n            });\n            \n        });\n\n    }\n}\n\nexport default List;","import React, {Component} from 'react';\nimport firebase from './firebase';\nimport { Link} from \"react-scroll\";\nimport Header from './Header.js';\nimport Button from './Button.js';\n\nimport List from './List.js';\nimport './App.css';\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tvegetables: [],\n\t\t\tfruit: [],\n\t\t\tprotein: []\n\t\t}\n\t\t\tthis.myButtonRef = React.createRef();\n\n\t\t};\n\n\t\thandleClick = (event) => {\n\t\t\tconst buttonValue = event.target.textContent;\n\t\t\tconst dbRef = firebase.database().ref(`savedItems`);\n\t\t\tdbRef.push(buttonValue);\n\t\t}\n\n\n  render(){\n    return(\n\t\t<div className=\"App\">\n\t\t\t<header id=\"headerScreen\">\n\t\t\t\t<Header />\n\t\t\t\t<Link\n\t\t\t\t\tid=\"headerButton\"\n\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\tclassName=\"getList\"\n\t\t\t\t\tto=\"appScreen\"\n\t\t\t\t\tduration={1000}\n\t\t\t\t\tsmooth={true}\n\t\t\t\t\tonSubmit={this.keyPress}\n\t\t\t\t\thref=\"#appScreen\"\n\t\t\t\t>\n\t\t\t\t\tList Items\n\t\t\t\t\t</Link>\n\n\t\t\t</header>\n\t\t\t<main className=\"contentSection\">\n\t\t\t\t<section className=\"appScreen\" id=\"appScreen\" >\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t<div className=\"vegetableList\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tingredients={this.state.vegetables}\n\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t\ttabindex={this.tabIndex}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"fruitList\" >\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tingredients={this.state.fruit}\n\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t\ttabindex={this.tabIndex}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"proteinList\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tingredients={this.state.protein}\n\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tid=\"getList1\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tclassName=\"getList\"\n\t\t\t\t\t\t\tto=\"listScreen\"\n\t\t\t\t\t\t\tduration={1000}\n\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\tonSubmit={this.keyPress}\n\t\t\t\t\t\t\thref=\"#listScreen\"\n\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGet My List!\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tid=\"top1\"\n\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\tclassName=\"getList\"\n\t\t\t\t\t\t\tto=\"headerScreen\"\n\t\t\t\t\t\t\tduration={1000}\n\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\tonSubmit={this.keyPress}\n\t\t\t\t\t\t\thref=\"#headerScreen\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack To Top\n\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t</section>\n\t\t\t\t<section className=\"listScreen\" id=\"listScreen\">\n\t\t\t\t\t<div className=\"paper\">\n\t\t\t\t\t\t<div className=\"pattern\">\n\t\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t\t<List />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tid=\"top2\"\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\tclassName=\"getList\"\n\t\t\t\t\t\t\t\tto=\"appScreen\"\n\t\t\t\t\t\t\t\tduration={1000}\n\t\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\t\tonSubmit={this.keyPress}\n\t\t\t\t\t\t\t\thref=\"#appScreen\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack To List Items\n\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tid=\"top3\"\n\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\tclassName=\"getList\"\n\t\t\t\t\t\t\t\tto=\"headerScreen\"\n\t\t\t\t\t\t\t\tduration={1000}\n\t\t\t\t\t\t\t\tsmooth={true}\n\t\t\t\t\t\t\t\tonSubmit={this.keyPress}\n\t\t\t\t\t\t\t\thref=\"#headerScreen\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack To Top\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</main>\n      </div>\n       \n    );\n  };\n  componentDidMount() {\n\n\n\tconst dbRefVegetables = firebase.database().ref(\"allVeg\");\n    dbRefVegetables.on('value', (response) => {\n\t\tconst newState = [];\n\t\tconst data = response.val();\n\n      for (let key in data) {\n        newState.push(data[key]);\n      }\n      this.setState({\n        vegetables: newState\n\t  });\n    });\n\n    const dbRefFruit = firebase.database().ref(\"allFruit\");\n    dbRefFruit.on('value', (response) => {\n      const newState = [];\n      const data = response.val();\n      for (let key in data) {\n        newState.push(data[key]);\n\t  }\n      this.setState({\n        fruit: newState\n      });\n\n    });\n\n    const dbRefProtein = firebase.database().ref(\"allProtein\");\n    dbRefProtein.on('value', (response) => {\n      const newState = [];\n      const data = response.val();\n      for (let key in data) {\n        newState.push(data[key]);\n      }\n      this.setState({\n        protein: newState\n      });\n\n    });\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}